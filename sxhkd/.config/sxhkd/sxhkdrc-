#
# wm independent hotkeys
#
XF86WakeUp; a
    notify-send.sh yay

# terminal emulator
super + shift + Return
    $HOME/bin/term
super + Return
    $HOME/bin/to_current myterm
super + alt + Return
    $HOME/bin/to_current Slack
super + space
    tdrop -ma -w 70% -h 70% -y 15% -x 15% -s scratch -f '-e tmux' kitty

# program launcher
super + {_,shift +} {d,r,Tab}
    {_,sudo} rofi -show {drun,run,window}
super + x
    rofi-autrandr
# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd
super + Escape
    xscreensaver-command -lock

super + v
    pavucontrol
#
# bspwm hotkeys
#

# quit/restart bspwm
super + ctrl + Escape
    ~/.config/bspwm/bspwmrc -r
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

XF86AudioRaiseVolume
    pactl set-sink-volume @DEFAULT_SINK@ +10%

XF86AudioLowerVolume
    pactl set-sink-volume @DEFAULT_SINK@ -10%

XF86AudioMute
    pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86AudioMicMute
    pactl set-source-mute @DEFAULT_SOURCE@ toggle## #
## XF86AudioRaiseVolume
##     pactl -- set-sink-volume 0 +5% #increase sound volume
## XF86AudioLowerVolume
##     pactl -- set-sink-volume 0 -5% #decrease sound volume
## XF86AudioMute
##     pactl set-sink-mute 0 toggle # mute sound
## XF86AudioMicMute
##     pactl set-source-mute 0 toggle # mute sound
## 
#bindsym XF86AudioRaiseVolume exec --no-startup-id "amixer -D pulse sset Master '5%+'"
#bindsym XF86AudioLowerVolume exec --no-startup-id "amixer -D pulse sset Master '5%-'"
#bindsym XF86AudioMute exec --no-startup-id "amixer set Master toggle"

XF86AudioPlay
    playerctl play-pause
XF86AudioNext
    playerctl next
XF86AudioPrev
    playerctl previous

# Sreen brightness controls
XF86MonBrightnessUp
    light  -A 1 # increase screen brightness
XF86MonBrightnessDown
    light  -U 1 # decrease screen brightness
shift + XF86MonBrightnessUp
    light -S 100% # increase screen brightness
shift + XF86MonBrightnessDown
    light -r -S 10 # decrease screen brightness
ctrl + alt + {_,shift + }p
    fname={'%Y-%m-%d_%H-%M-%S_$wx$h.png',$(zenity --entry --text "s")} ; \
    echo $fname ; \
    cmd="scrot -s '$fname' -e 'mv \$f ~/Pictures/Screenshots/'" ; \
    echo $cmd ; \
    bash -c $cmd
#ctrl + shift + p
#    scrot -s zenity --entry --text="ENTER A FILENAME"

#super + {_,shift + }

Print
     scrot -s '%Y-%m-%d_%h-%m-%s_$wx$h_scrot.png' \
     -e 'mv $f ~/Pictures/Screenshots/'
#ctrl + Print
#     zenity --question --text="Do you wish to continue/?"
