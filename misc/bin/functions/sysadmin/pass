#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ══════════════════════════════════════════════════════════════════════════════

# ..................................................................... Password

usage() { echo "usage: $(basename $0) <name> | a'dd <name> <password> | eX'port | G|g'enerate <name> | I'nitialize | i'mport | l'ist | m'v <name> <'name> | R'm <name>"; exit 1; }

PASS=/usr/bin/pass
STORE=${PASSWORD_STORE_DIR-$HOME/.password-store}
XDIR=$HOME/sandbox
image=$(basename $0).sh

init() {
  ifno 'initialize password store' && exit 1
  [ -d $STORE ] && mv -v $STORE $STORE.save
  $PASS init sdothum@gmail.com
  ditto -- 'import (rebuild) your password store'
}

password() {
  if [ $# -eq 1 ] ;then
    if password=$($PASS $1 2>/dev/null) ;then
      # interactive mode?
      if ps -ef | grep $PPID | grep -q $SHELL ;then
        [ -e $HOME/.password-store/username/${1#*/}.gpg ] && username=$($PASS username/${1#*/}) ||
          username=$($PASS username/default)
        echo "$username\n$password"
        notify $1 "$username\n$password"
        $PASS --clip $1
      else
        echo $password
      fi
      exit
    else
      echo "Undefined password"
    fi
  fi
}

xport() {
  cd $XDIR
  rm -fv ${image%.sh}.zip
  echo "#!/usr/bin/dash
pass I || exit" >$image
  names=$(find $STORE -name '*.gpg' | sed "s|$STORE/||g; s/.gpg$//")
  for i in $names ;do
    ditto exporting "$i"
    key=$($PASS $i | sed "s/'/'\"'\"'/")
    echo "pass i $i '$key'" >>$image
  done
  echo "rm -f $image" >>$image
  chmod -c 700 $image
  zip -mP "$(passphrase pass/master)" ${image%.sh} $image
}

# password manager
case $1 in
a ) [ $# -eq 3 ] && { echo "$3\n$3" | $PASS insert --force $2; exec pass $2; } ;;
G ) [ $# -eq 2 ] && { $PASS generate --no-symbols --force --clip $2 12; exec pass $2; } ;;
g ) [ $# -eq 2 ] && { $PASS generate --force --clip $2 12; exec pass $2; } ;;
I ) init; exit ;;
i ) [ $# -eq 3 ] && { ditto importing "$2"; echo "$3\n$3" >/tmp/pass; exec $PASS insert --force $2 </tmp/pass >>/tmp/pass.log 2>&1; } ;;
l )  shift && exec $PASS $@ ;;
m ) [ $# -eq 3 ] && { $PASS mv --force $2 $3; exec pass $3; } ;;
R ) [ $# -eq 2 ] && { exec $PASS rm --recursive --force $2; } ;;
X ) xport; exit ;;
* ) password $@ ;;
esac

usage

# vim: set ft=sh: #
