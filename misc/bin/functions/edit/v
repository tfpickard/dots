#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Edit
# ══════════════════════════════════════════════════════════════════════════════

# ....................................................................... Editor

# Usage: v [--role <role> | -f | -c <command>]* [<file>]*

# va va voom
SHELL=/usr/bin/dash
export QUEUE=$(date '+%y%m%d%H%M%S')
retention=90  # undo history file retention days
vimtrace=$HOME/.session/vimtrace
[ -e $HOME/.session/mono ] && export MONO=-mono

LOG=/tmp/vim.log
echo >$LOG
[ $DISPLAY ] && [ -e $vimtrace ] && { export VIMTRACE=true; term 'vimtrace' tail -f $LOG; }

while : ;do
  case $1 in
  --role) role="--role $2"; shift ;;
  -f    ) fg=-f ;;
  -c    ) cmd="-c '$2'";    shift ;;
   *    ) break ;;
  esac
  shift
done

if [ -z "$1" ] ;then
  [ $PWD = $HOME ] && depth=1 || depth=9
  # force ncurses mode, see fzf wrapper
  file=$(find -maxdepth $depth -type f 2>/dev/null | exclude | TERMINAL=true rmenu 'Edit' --multi) || exit
else
  if [ ! -e "$1" ] ;then
    unset sudo
  elif [ -w "$1" ] ;then
    unset sudo
  else
    sudo='sudo -s'
  fi
fi

# quote filenames containing spaces
count=0
[ "$file" ] || while : ;do 
  file="$file \"$1\""
  count=$(( $count + 1 ))
  shift
  [ $# -gt 0 ] || break 
done

[ $count -gt 1 ] && notify low 'Gvim' "$count files to edit"

console || { gui=-g; [ -e $DYNAMIC ] && focus frame; }
[ -e $SESSION/vim ] && fg=-f
# --quote used for single space separated filename
eval $sudo vim $gui $role $fg $cmd $file 2>>$LOG
# prevent premature startup termination on slower processors
cpu arm && sleep 5

# postpone cleanup till done with all vim sessions
housekeeping() {
  vhg $QUEUE  # undo files
  pstat vim && exit
  find $HOME/.vim/undo -user root -exec sudo chown -c $USER:users {} \;
  find $HOME/.vim/undo -size 0 -exec rm {} \;
  find $HOME/.vim/undo -mtime +$retention -exec rm {} \;
  rm -f $HOME/.vim/undo/%tmp%*
  rm -f $HOME/.vim/undo/*%drafts%alot.*
  # avoid nfs mounted Maildir (and unnecessary processing)
  server && find $HOME/Maildir -name '.viminf*.tmp' -exec rm {} \;
  vhg  # any dangling undo files
  cpu arm && rsync $STOW/.hg $SERVER:$STOW/ >/dev/null 2>&1
}

(pwait "vim.*$gui.*$fg.*$cmd.*$file" && housekeeping) &

# vim: set ft=sh: #
