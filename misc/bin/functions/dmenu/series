# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................ Television series

# Library structure:
# ../videos
#        ../series
#               ../show
#                    ../*S01E01*  (episode)

  NAME='[ sort by name ]'
  DATE='[ sort by date ]'
  EDIT='[ manage       ]'
SONARR='[ sonarr       ]'

# video library
category=${1:-series}
PASSPORT="/run/media/$USER/My Passport/$category"
[ -d "$PASSPORT" ] && { library=$PASSPORT; usb=true; } || library=${LIBRARY:-/net/media/videos/$category}
sonarr=http://$SERVER:8989/
preprocess=${0%/dmenu}/functions/dmenu/.d/$category
retitle="$library"/.retitle
rm -f $retitle

# exclude directory kludge of .anime links in main series folder
if server || $usb ;then
  find "$library" -maxdepth 2 -type d -name '[^.]*' -user sonarr -exec sudo chmod -R 755 {} \; 2>/dev/null
  find "$library" -maxdepth 2 -type d -name '[^.]*' -user sonarr -exec sudo chown -R shum:users {} \; 2>/dev/null
else
  ssh $SERVER "find '$library' -maxdepth 2 -type d -name '[^.]*' -user sonarr -exec sudo chmod -R 755 {} \\;"
  ssh $SERVER "find '$library' -maxdepth 2 -type d -name '[^.]*' -user sonarr -exec sudo chown -R shum:users {} \\;"
fi
find "$library" -name '*sample*' -exec rm {} \; &
# clean up titles
[ -e $preprocess ] && . $preprocess
retitle "$library" >>$retitle

# list latest television series additions first
T=t
episodes=/tmp/dmenu:episodes
gui && monitor=$(herbstclient attr monitors.focus.index)

shows() {
  # clean up episodes
  retitle "$series" >>$retitle
  ls -1 "$series" | sed -r 's/.*\.((S[0-9][0-9]E[0-9][0-9])([E.][0-9][0-9])?)(\..*)*/\1/' | sort >$episodes
  playlist $episodes "$playlist"
}

# initial row is most current show vs last viewed
show=3
while : ;do
  show=$(ls -1$T "$library" | grep -v ' ' | sed "s/\./ /g; 1i$SONARR\n$EDIT" | sed "1i[ $(sortlist $T) ]" | 
      rmenu 'Series' "$show" -no-custom) || break

  # force dmenu focus (continue within do loop doesn't guarantee focus)
  case $show in
  "$NAME"  ) unset T; continue ;;
  "$DATE"  ) T=t;     continue ;;
  "$EDIT"  ) pkill -TERM 'ROX-Filer'; rox "$library"; pwait "ROX-Filer "$library""; exec dmenu series $1 ;;
  "$SONARR") $BROWSER $sonarr; pwait "$BROWSER.*$sonarr"; continue ;;

  *        ) series=""$library"/$(echo $show | sed 's/ /./g')"
             playlist="$series/.playlist"
             [ -e "$playlist" ] || echo >"$playlist" ;;
  esac

  while : ;do
    # focus monitor menu originally presented on
    [ $monitor ] && herbstclient focus_monitor $monitor
    # highlight last episode viewed
    [ $episode ] || { [ -e "$playlist" ] && episode=$(head -1 "$playlist") || unset playlist; }
    episode=$(shows | rmenu "$show" "$episode" -no-custom) || break
    [ "$episode" ] || break

    episode=$(echo "$episode" | sed "s/^$SEP //")
    video=$(find "$series" -maxdepth 1 -type d -regex ".*$episode.*")
    [ -z "$video" ] && video=$(find "$series" -maxdepth 1 -type f -regex ".*$episode.*")
    if [ $(echo "$video" | wc -l) -gt 1 ] ;then
      notify 3 critical "$show" "Duplicate episodes found"
      sleep 3
      break
    fi

    mhistory "$playlist" "$episode"
    play "$video" "$show $episode"
  done
done

# vim: set ft=sh: #
