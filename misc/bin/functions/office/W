#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Office
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................... Word frequency

# Usage: [GT=<count>] W [[list] <letter>*]

WORDS=${WORDS:-$HOME/.config/Amphetype/100K-word.database}
GT=${GT:-0}

alphabet='e t a o i n s r h l d c u m f p g w y b v k x j q z'
digraph='in on an es re te en ti ar at le ra al or ed nt is ro de co se it to io as he ha nd et ve ea th ou rt sa em'
trigraph='ing ion tio ent and men nde nce for the tis tha'
double='ss ee tt ff ll mm oo rr nn pp'

[ "$1" = list ] && { shift; list=true; }

frequency() {
  for i in $(grep -i $i $WORDS | cut -f2) ;do
    echo $i
  done | awk '{ freq += $1 } END { print freq }'
}

corpus() {
  underline
  for i in $@ ;do
    [ $(grep -i $i $WORDS | wc -l) -gt $GT ] && echo $i $(grep -i $i $WORDS | wc -l) $(frequency $i)
  done | sort -nr -k3 |
      awk '{ cnt += $2; freq += $3; printf("%s %d %'"'"'d\n", $1, $2, $3); gsub(/./, "-", $1); hdg = length($1) > length(hdg) ? $1 : hdg } END { printf("%s %d %'"'"'d\n", hdg, cnt, freq) }' |
      column -s' ' -t
}

list() {
  for i in $@ ;do
    underline
    grep -i $i $WORDS | awk '{ print $1 }' | tr '\n' ' '
    echo
  done
}

if [ $1 ] ;then
  corpus $@
  # list really only makes sense for single inquiry
  [ $list ] && list $@
else
  corpus $double
  corpus $trigraph
  corpus $digraph
  corpus $alphabet
fi

# vim: set ft=sh: #
