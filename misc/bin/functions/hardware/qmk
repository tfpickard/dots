#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Hardware
# ══════════════════════════════════════════════════════════════════════════════

# .............................................................. Chimera Ergo 42

usage() { echo "usage: $(basename $0) <keyboard> <keymap> [steno [nomouse]] [<string> [<string>]] [dfu]"; exit 1; }

[ $2 ] || usage
case $1 in
chimera) KBD=chimera_ergo_42 ;;
*      ) KBD=$1 ;;
esac
[ -d $STOW/$1/qmk_firmware/keyboards/$KBD/keymaps/$2 ] || usage

# ROOT=/net/depot
ROOT=$HOME
QMK=$ROOT/qmk_firmware
KEYBOARD=$QMK/keyboards/$KBD
KEYMAP=$KEYBOARD/keymaps/$2
CONFIG=$KEYMAP/config.h
MAKEFILE=$KEYMAP/Makefile

model=$1
keymap=$2
shift 2
export CPATH=$KEYMAP/common

ditto "$KEYBOARD" "$keymap"
ifno 'sync qmk_firmware repo' || { cd $QMK; rm -rf $KEYBOARD; git pull origin master; }

# update keymap from stow repo
mkdir -p $KEYMAP 2>/dev/null
rsync -avq -KL --exclude .deprecated $STOW/$model/${KEYBOARD#$ROOT/}/* $KEYBOARD/

# steno (mouse may need to be mandisabled in config.h)
if [ "$1" = steno ] ;then
  sed -i '/STENO_ENABLE/s/= no /= yes/' $MAKEFILE
  shift
  [ "$1" = nomouse ] && { sed -i '/MOUSEKEY_ENABLE/s/= yes/= no /' $MAKEFILE; shift; }
else
  sed -i '/STENO_ENABLE/s/= yes/= no /' $MAKEFILE
fi

# compile time macro stings
grep -q PRIVATE_STRING $CONFIG || sed -i '$a#define PRIVATE_STRING ""' $CONFIG
grep -q PUBLIC_STRING $CONFIG || sed -i '$a#define PUBLIC_STRING ""' $CONFIG
# sed -i '/#define PRIVATE_STRING/c#define PRIVATE_STRING ""; /#define PUBLIC_STRING/c#define PUBLIC_STRING ""' $CONFIG

case $1 in
'' | dfu) sed -i "/#define PRIVATE_STRING/c#define PRIVATE_STRING \"\"" $CONFIG ;;
*       ) sed -i "/#define PRIVATE_STRING/c#define PRIVATE_STRING \"$1\"" $CONFIG; shift ;;
esac
case $1 in
'' | dfu) [ -e $HOME/.zipcode ] && sed -i "/#define PUBLIC1_STRING/c#define PUBLIC1_STRING \"$(cat $HOME/.zipcode)\"" $CONFIG ;;
*       ) sed -i "/#define PUBLIC1_STRING/c#define PUBLIC1_STRING \"$1\"" $CONFIG; shift ;;
esac
case $1 in
'' | dfu) [ -e $HOME/.forward ] && sed -i "/#define PUBLIC2_STRING/c#define PUBLIC2_STRING \"$(cat $HOME/.forward)\"" $CONFIG ;;
*       ) sed -i "/#define PUBLIC2_STRING/c#define PUBLIC2_STRING \"$1\"" $CONFIG; shift ;;
esac

cd $QMK
sudo make $KBD:$keymap:clean
if [ $model = chimera ] ;then
  make $KBD:$keymap
  # if dfu cannot detect keyboard receiver, verify hex size to not brick bootloader..
  [ "$1" = dfu ] && {
    ditto flash "$(ls -l ${KBD}_$keymap.hex)"
    [ -e /dev/ttyACM0 ] && dev=/dev/ttyACM0 || dev=/dev/ttyACM1
    ifyes 'press ENTER\n..followed by receiver RESET' && sleep 3 || exit
    sudo avrdude -p atmega32u4 -P $dev -c avr109 -U flash:w:${KBD}_$keymap.hex
  }
else
  [ "$1" = dfu ] && sudo CPATH=$CPATH make $KBD:$keymap:dfu || make $KBD:$keymap
fi
sudo chown -R $USER:users $QMK

# vim: set ft=sh: #
